name: Release

on:
  push:
    tags:
    - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  generate:
    runs-on: ubuntu-latest

    needs: release

    strategy:
      matrix:
        include:
          - name: aarch64
            platform: aarch64-unknown-linux-musl
          - name: x86_64
            platform: x86_64-unknown-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.platform }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: noderole-${{ matrix.name }}
          path: target/${{ matrix.platform }}/release/noderole

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/${{ matrix.platform }}/release/noderole
          asset_name: noderole-${{ matrix.name }}
          asset_content_type: application/octet-stream
